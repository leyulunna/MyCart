{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","quantity","items","change","reducers","fetchCart","state","action","payload","addItemToCart","newItem","existItem","find","item","id","totalPrice","price","title","removeItemFromCart","filter","cartAction","actions","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","showCart","notification","toggleCart","showNotification","status","message","uiAction","CartButton","disptach","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_DATA","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","ui","useEffect","a","fetchData","fetch","response","ok","Error","cartData","json","cartRes","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.245e51da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = { quantity: 0, items: [], change: false };\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    fetchCart(state, action) {\n      state.quantity = action.payload.quantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      state.change = true;\n      const newItem = action.payload;\n      const existItem = state.items.find(item => item.id === newItem.id);\n      state.quantity++;\n      if (!existItem) {\n        state.items = [...state.items, {\n          id: newItem.id,\n          name: newItem.title,\n          quantity: 1,\n          totalPrice: newItem.price,\n          price: newItem.price\n        }];\n      } else {\n        existItem.quantity++;\n        existItem.totalPrice = existItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      state.change = true;\n      const id = action.payload;\n      const existItem = state.items.find(item => item.id === id);\n      state.quantity--;\n      if (existItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existItem.quantity--;\n        existItem.totalPrice = existItem.totalPrice - existItem.price;\n      }\n    }\n  }\n});\n\nexport const cartAction = cartSlice.actions;\n\nexport default cartSlice;","import { useDispatch } from 'react-redux';\nimport classes from './CartItem.module.css';\nimport { cartAction } from '../../store/cart/cart-slice';\n\nconst CartItem = (props) => {\n  const { id, title, quantity, total, price } = props.item;\n  const dispatch = useDispatch();\n\n  const increaseItem = () => {\n    dispatch(cartAction.addItemToCart({\n      id: id,\n      title: title,\n      price: price\n    }))\n  }\n\n  const decreaseItem = () => {\n    dispatch(cartAction.removeItemFromCart(id));\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          {`${total.toFixed(2)}\\n`}\n          <span className={classes.itemprice}>{`${price.toFixed(2)}/item`}</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decreaseItem}>-</button>\n          <button onClick={increaseItem}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const cartItems = useSelector(state => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map(item => <CartItem\n          key={item.id}\n          item={{ id: item.id, title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price }}\n        />)}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialUIState = { showCart: false, notification: null };\n\nconst uiSlice = createSlice({\n  name: 'cart',\n  initialState: initialUIState,\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      }\n    }\n  }\n});\n\nexport const uiAction = uiSlice.actions;\n\nexport default uiSlice;","import { useDispatch, useSelector } from 'react-redux';\nimport { uiAction } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const quantity = useSelector(state => state.cart.quantity);\n  const disptach = useDispatch();\n\n  const toggleCart = () => {\n    disptach(uiAction.toggleCart());\n  }\n\n  return (\n    <button className={classes.button} onClick={toggleCart}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{quantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartAction } from '../../store/cart/cart-slice';\n\nconst ProductItem = (props) => {\n  const { id, title, price, description } = props;\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    dispatch(cartAction.addItemToCart({\n      id: id,\n      title: title,\n      price: price\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>{price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_DATA = [\n  {\n    id: 'b1',\n    price: 100,\n    title: 'My book',\n    description: 'This is so helpful'\n  },\n  {\n    id: 'p1',\n    price: 30,\n    title: 'My pen',\n    description: 'Make writing so easy'\n  },\n]\n\nconst Products = (props) => {\n\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_DATA.map(product =>\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />)\n        }\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, getCartData } from './store/cart/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  const showCart = useSelector(state => state.ui.showCart);\n  const cart = useSelector(state => state.cart);\n\n  useEffect(() => {\n    dispatch(getCartData())\n  }, [dispatch])\n\n  useEffect(() => {\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.change) {\n      dispatch(sendCartData(cart));\n    }\n\n\n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n      {notification && \n        <Notification \n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      }\n      <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiAction } from '../ui-slice';\nimport { cartAction } from './cart-slice';\n\nexport const getCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch('https://redux-cart-76d73-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Cannot Fetch Data!')\n      }\n\n      const cartData = response.json();\n\n      return cartData;\n    }\n\n    try {\n      const cartRes = await fetchData();\n      dispatch(cartAction.fetchCart(\n        {\n          items: cartRes.items || [],\n          quantity: cartRes.quantity\n        }\n      ))\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sent cart data failed!'\n      }))\n    }\n  }\n}\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(uiAction.showNotification(\n      {\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }\n    ))\n    \n    const fetchData = async () => {\n      const response = await fetch('https://redux-cart-76d73-default-rtdb.firebaseio.com/cart.json'\n      , { method: 'PUT', body: JSON.stringify(\n        {\n          items: cart.items,\n          quantity: cart.quantity\n        }) \n      })\n\n      if (!response.ok) {\n        throw new Error('Getting cart data failed');\n      }\n    }\n\n    try {\n      await fetchData();\n\n      dispatch(uiAction.showNotification(\n        {\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!'\n        }\n      ))\n\n    } catch(error) {\n      dispatch(uiAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sent cart data failed!'\n      }))\n    }\n  }\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from './ui-slice';\nimport cartSlice from './cart/cart-slice'\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer }\n});\n\n\nexport default store;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}